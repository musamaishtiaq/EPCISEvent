// <auto-generated />
using System;
using EPCISEvent.MasterData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EPCISEvent.Migrations
{
    [DbContext(typeof(MasterDataContext))]
    [Migration("20250905062359_AddedEventDataModel")]
    partial class AddedEventDataModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("MasterData")
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("Address3")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("CompanyTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("GLN13")
                        .HasColumnType("text");

                    b.Property<string>("GS1CompanyPrefix")
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("SGLN")
                        .HasColumnType("text");

                    b.Property<string>("StateProvince")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyTypeId");

                    b.HasIndex("GS1CompanyPrefix")
                        .IsUnique();

                    b.ToTable("Companies", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.EventData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EventLog")
                        .HasColumnType("text");

                    b.Property<string>("EventType")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("EventDatas", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address1")
                        .HasColumnType("text");

                    b.Property<string>("Address2")
                        .HasColumnType("text");

                    b.Property<string>("Address3")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("GLN13")
                        .HasColumnType("text");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<int?>("LocationTypeId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text");

                    b.Property<string>("SGLN")
                        .HasColumnType("text");

                    b.Property<string>("SSA")
                        .HasColumnType("text");

                    b.Property<short?>("SST")
                        .HasColumnType("smallint");

                    b.Property<int?>("SiteId")
                        .HasColumnType("integer");

                    b.Property<string>("StateProvince")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LocationTypeId");

                    b.HasIndex("SiteId");

                    b.ToTable("Locations", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.TradeItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalId")
                        .HasColumnType("text");

                    b.Property<string>("AdditionalIdTypeCode")
                        .HasColumnType("text");

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<string>("CountryOfOrigin")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionShort")
                        .HasColumnType("text");

                    b.Property<string>("DosageFormType")
                        .HasColumnType("text");

                    b.Property<float?>("DrainedWeight")
                        .HasColumnType("real");

                    b.Property<string>("DrainedWeightUom")
                        .HasColumnType("text");

                    b.Property<string>("FunctionalName")
                        .HasColumnType("text");

                    b.Property<string>("GTIN14")
                        .HasColumnType("text");

                    b.Property<float?>("GrossWeight")
                        .HasColumnType("real");

                    b.Property<string>("GrossWeightUom")
                        .HasColumnType("text");

                    b.Property<string>("LabelDescription")
                        .HasColumnType("text");

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("text");

                    b.Property<string>("NDC")
                        .HasColumnType("text");

                    b.Property<string>("NdcPattern")
                        .HasColumnType("text");

                    b.Property<string>("NetContentDescription")
                        .HasColumnType("text");

                    b.Property<float?>("NetWeight")
                        .HasColumnType("real");

                    b.Property<string>("NetWeightUom")
                        .HasColumnType("text");

                    b.Property<int?>("PackCount")
                        .HasColumnType("integer");

                    b.Property<string>("PackageUom")
                        .HasColumnType("text");

                    b.Property<string>("RegulatedProductName")
                        .HasColumnType("text");

                    b.Property<int?>("SerialNumberLength")
                        .HasColumnType("integer");

                    b.Property<string>("StrengthDescription")
                        .HasColumnType("text");

                    b.Property<string>("TradeItemDescription")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("GTIN14")
                        .IsUnique();

                    b.ToTable("TradeItems", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.CompanyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CompanyTypes", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.LocationField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationFields", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.LocationIdentifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.Property<string>("IdentifierType")
                        .HasColumnType("text");

                    b.Property<int>("LocationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationIdentifiers", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.LocationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Identifier")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LocationTypes", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.OutboundMapping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("integer");

                    b.Property<int?>("FromBusinessId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShipFromId")
                        .HasColumnType("integer");

                    b.Property<int?>("ShipToId")
                        .HasColumnType("integer");

                    b.Property<int?>("ToBusinessId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FromBusinessId");

                    b.HasIndex("ShipFromId");

                    b.HasIndex("ShipToId");

                    b.HasIndex("ToBusinessId");

                    b.ToTable("OutboundMappings", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.TradeItemField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("TradeItemId")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TradeItemId");

                    b.ToTable("TradeItemFields", "MasterData");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.Company", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.SupportingClasses.CompanyType", "CompanyType")
                        .WithMany("Companies")
                        .HasForeignKey("CompanyTypeId");

                    b.Navigation("CompanyType");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.Location", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.MainClasses.Company", "Company")
                        .WithMany("Locations")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EPCISEvent.MasterData.SupportingClasses.LocationType", "LocationType")
                        .WithMany("Locations")
                        .HasForeignKey("LocationTypeId");

                    b.HasOne("EPCISEvent.MasterData.MainClasses.Location", "Site")
                        .WithMany("SubSites")
                        .HasForeignKey("SiteId");

                    b.Navigation("Company");

                    b.Navigation("LocationType");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.TradeItem", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.MainClasses.Company", "Company")
                        .WithMany("TradeItems")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.LocationField", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.MainClasses.Location", "Location")
                        .WithMany("Fields")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.LocationIdentifier", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.MainClasses.Location", "Location")
                        .WithMany("Identifiers")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.OutboundMapping", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.MainClasses.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPCISEvent.MasterData.MainClasses.Company", "FromBusiness")
                        .WithMany()
                        .HasForeignKey("FromBusinessId");

                    b.HasOne("EPCISEvent.MasterData.MainClasses.Location", "ShipFrom")
                        .WithMany()
                        .HasForeignKey("ShipFromId");

                    b.HasOne("EPCISEvent.MasterData.MainClasses.Location", "ShipTo")
                        .WithMany()
                        .HasForeignKey("ShipToId");

                    b.HasOne("EPCISEvent.MasterData.MainClasses.Company", "ToBusiness")
                        .WithMany()
                        .HasForeignKey("ToBusinessId");

                    b.Navigation("Company");

                    b.Navigation("FromBusiness");

                    b.Navigation("ShipFrom");

                    b.Navigation("ShipTo");

                    b.Navigation("ToBusiness");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.TradeItemField", b =>
                {
                    b.HasOne("EPCISEvent.MasterData.MainClasses.TradeItem", "TradeItem")
                        .WithMany("Fields")
                        .HasForeignKey("TradeItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TradeItem");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.Company", b =>
                {
                    b.Navigation("Locations");

                    b.Navigation("TradeItems");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.Location", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Identifiers");

                    b.Navigation("SubSites");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.MainClasses.TradeItem", b =>
                {
                    b.Navigation("Fields");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.CompanyType", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("EPCISEvent.MasterData.SupportingClasses.LocationType", b =>
                {
                    b.Navigation("Locations");
                });
#pragma warning restore 612, 618
        }
    }
}
